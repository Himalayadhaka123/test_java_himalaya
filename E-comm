// ProductManagementSystem.java

class InvalidProductException extends Exception {
    public InvalidProductException(String message) {
        super(message);
    }
}

class Product {
    private int productId;
    private String productName;
    private double price;
    private int quantity;

    // Constructor with all fields
    public Product(int productId, String productName, double price, int quantity) throws InvalidProductException {
        if (price < 0 || quantity < 0) {
            throw new InvalidProductException("Price and quantity cannot be negative.");
        }
        this.productId = productId;
        this.productName = productName;
        this.price = price;
        this.quantity = quantity;
    }

  
    public Product(int productId, String productName) {
        this.productId = productId;
        this.productName = productName;
        this.price = 0.0;
        this.quantity = 0;
    }

  

  
    public void addProduct(int productId, String productName, double price, int quantity) throws InvalidProductException {
        if (price < 0 || quantity < 0) {
            throw new InvalidProductException("Price and quantity cannot be negative.");
        }
        this.productId = productId;
        this.productName = productName;
        this.price = price;
        this.quantity = quantity;
    }

    // Name and price only
    public void addProduct(String productName, double price) throws InvalidProductException {
        if (price < 0) {
            throw new InvalidProductException("Price cannot be negative.");
        }
        this.productName = productName;
        this.price = price;
    }

    // Name, price, and quantity
    public void addProduct(String productName, double price, int quantity) throws InvalidProductException {
        if (price < 0 || quantity < 0) {
            throw new InvalidProductException("Price and quantity cannot be negative.");
        }
        this.productName = productName;
        this.price = price;
        this.quantity = quantity;
    }

    public void displayProduct() {
        System.out.println("Product ID: " + productId);
        System.out.println("Name: " + productName);
        System.out.println("Price: " + price);
        System.out.println("Quantity: " + quantity);
        System.out.println("-------------------------");
    }
}

public class ProductManager {
    public static void main(String[] args) {
        try {
            // Using full constructor
            Product p1 = new Product(101, "Laptop", 50000, 10);
            p1.displayProduct();

            // Using partial constructor
            Product p2 = new Product(102, "Mouse");
            p2.displayProduct();

            
            p2.addProduct(102, "Mouse", 500, 50);
            p2.displayProduct();

            
            Product p3 = new Product(103, "Keyboard");
            p3.addProduct("Keyboard", 1500);
            p3.displayProduct();

            
            Product p4 = new Product(104, "Monitor");
            p4.addProduct("Monitor", 8000, 20);
            p4.displayProduct();

            
            Product p5 = new Product(105, "Headphones");
            p5.addProduct("Headphones", -1000, 5); // Should throw exception
        } catch (InvalidProductException e) {
            System.out.println("Exception: " + e.getMessage());
        }
    }
}
