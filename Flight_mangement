import java.util.*;
// Abstract class Flight
abstract class Flight {
    protected String flightNumber;
    protected String origin;
    protected String destination;
    protected double baseFare;

    public Flight(String flightNumber, String origin, String destination, double baseFare) {
        this.flightNumber = flightNumber;
        this.origin = origin;
        this.destination = destination;
        this.baseFare = baseFare;
    }

    // Abstract method
    public abstract double calculateFare();

    // Non-abstract method 
    public void displayDetails() {
        System.out.println("Flight Number: " + flightNumber);
        System.out.println("Origin: " + origin);
        System.out.println("Destination: " + destination);
        System.out.println("Base Fare: ₹" + baseFare);
    }
}

// DomesticFlight class
class DomesticFlight extends Flight {
    private static final double domesticTax = 0.10;

    public DomesticFlight(String flightNumber, String origin, String destination, double baseFare) {
        super(flightNumber, origin, destination, baseFare);
    }

    @Override
    public double calculateFare() {
        return baseFare + (baseFare * domesticTax);
    }

    @Override
    public void displayDetails() {
        super.displayDetails();
        System.out.println("Domestic Tax (10%)");
        System.out.println("Total Fare: ₹" + calculateFare());
    }
}


class InternationalFlight extends Flight {
    private static final double internationalTax = 0.20;
    private double immigrationFee;

    public InternationalFlight(String flightNumber, String origin, String destination, double baseFare, double immigrationFee) {
        super(flightNumber, origin, destination, baseFare);
        this.immigrationFee = immigrationFee;
    }

    @Override
    public double calculateFare() {
        return baseFare + (baseFare * internationalTax) + immigrationFee;
    }

    @Override
    public void displayDetails() {
        super.displayDetails();
        System.out.println("International Tax (20%) + Immigration Fee: ₹" + immigrationFee);
        System.out.println("Total Fare: ₹" + calculateFare());
    }
}


public class FlightManager {
    public static void main(String[] args) {
        
        Flight[] flights = new Flight[3];

        flights[0] = new DomesticFlight("AI101", "Delhi", "Mumbai", 5000);
        flights[1] = new InternationalFlight("AI202", "Delhi", "London", 20000, 3000);
        flights[2] = new InternationalFlight("AI203", "Mumbai", "Dubai", 15000, 2500);

        
        for (Flight flight : flights) {
            System.out.println("\n--- Flight Details ---");
            flight.displayDetails(); // Polymorphic call
        }
    }
}
